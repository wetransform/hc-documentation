"use strict";(self.webpackChunkhc_documentation=self.webpackChunkhc_documentation||[]).push([[9829],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(n),d=i,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,c=new Array(a);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,c[1]=o;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7106:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(8168),i=(n(6540),n(5680));const a={title:"Ressourcentyp Schema",categories:["help-page-category-terms","help-page-subcategory-terms"],layout:"help-detail",language:"de"},c=void 0,o={unversionedId:"key-concepts/2015-05-01-terms-schema",id:"key-concepts/2015-05-01-terms-schema",title:"Ressourcentyp Schema",description:"Ein Schema ist ein Datenmodell, welches Typen und ihre Eigenschaften formal definiert. Schemas werden alle gleich interpretiert, egal aus welcher Quelle sie urspr\xfcnglich stammen. Es handelt sich meist um logische Schemas, wie sie in einer Datenbank oder in einer XML Schema Definition (XSD) definiert werden. Ein Schema wird von Diensten genutzt, um Daten gem\xe4\xdf dieses Schemas zu validieren, und stellt die Grundlage f\xfcr das Alignment in Transformationsprojekten dar.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/key-concepts/2015-05-01-terms-schema.md",sourceDirName:"key-concepts",slug:"/key-concepts/2015-05-01-terms-schema",permalink:"/de/docs/key-concepts/2015-05-01-terms-schema",draft:!1,editUrl:"https://github.com/wetransform/hc-documentation/tree/master/i18n/de/docusaurus-plugin-content-docs/current/key-concepts/2015-05-01-terms-schema.md",tags:[],version:"current",frontMatter:{title:"Ressourcentyp Schema",categories:["help-page-category-terms","help-page-subcategory-terms"],layout:"help-detail",language:"de"},sidebar:"tutorialSidebar",previous:{title:"Ressourcentyp Profil",permalink:"/de/docs/key-concepts/2015-05-01-terms-profile"},next:{title:"Ressourcentyp Dienst",permalink:"/de/docs/key-concepts/2015-05-01-terms-service"}},s={},l=[],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.yg)(p,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Ein Schema ist ein Datenmodell, welches Typen und ihre Eigenschaften formal definiert. Schemas werden alle gleich interpretiert, egal aus welcher Quelle sie urspr\xfcnglich stammen. Es handelt sich meist um logische Schemas, wie sie in einer Datenbank oder in einer XML Schema Definition (XSD) definiert werden. Ein Schema wird von Diensten genutzt, um Daten gem\xe4\xdf dieses Schemas zu validieren, und stellt die Grundlage f\xfcr das Alignment in Transformationsprojekten dar."))}m.isMDXComponent=!0}}]);