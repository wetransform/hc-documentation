"use strict";(self.webpackChunkhc_documentation=self.webpackChunkhc_documentation||[]).push([[2515],{7397:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"key-concepts/2015-05-01-terms-thema","title":"Resource Type Theme","description":"A theme is a re-usable configuration object used to define common settings for data set metadata, service publishing and transformation. The theme has several elements:","source":"@site/docs/key-concepts/2015-05-01-terms-thema.md","sourceDirName":"key-concepts","slug":"/key-concepts/2015-05-01-terms-thema","permalink":"/docs/key-concepts/2015-05-01-terms-thema","draft":false,"unlisted":false,"editUrl":"https://github.com/wetransform/hc-documentation/tree/master/docs/key-concepts/2015-05-01-terms-thema.md","tags":[],"version":"current","frontMatter":{"title":"Resource Type Theme","categories":["help-page-category-terms","help-page-subcategory-terms"],"layout":"help-detail","language":"en"},"sidebar":"tutorialSidebar","previous":{"title":"Resource Type Service","permalink":"/docs/key-concepts/2015-05-01-terms-service"},"next":{"title":"Resource Type Transformation","permalink":"/docs/key-concepts/2015-05-01-terms-transformation"}}');var s=n(4848),o=n(8453);const r={title:"Resource Type Theme",categories:["help-page-category-terms","help-page-subcategory-terms"],layout:"help-detail",language:"en"},i=void 0,c={},l=[];function m(e){const t={li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"A theme is a re-usable configuration object used to define common settings for data set metadata, service publishing and transformation. The theme has several elements:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A schema, defined through association with a number of types"}),"\n",(0,s.jsx)(t.li,{children:"Display properties for the fields and types of that schema, such as aliases and styling"}),"\n",(0,s.jsx)(t.li,{children:"A metadata configuration which defines the metadata fields that need to be provided, as well as default values and autofill rules for a high degree of automation"}),"\n",(0,s.jsx)(t.li,{children:"An association with a transformation project that enables format conversion and schema transformation"}),"\n",(0,s.jsx)(t.li,{children:"A configuration for an automated workflow that can be set to execute service publishing and data transformation on certain events such as an update to a data set"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var a=n(6540);const s={},o=a.createContext(s);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);