"use strict";(self.webpackChunkhc_documentation=self.webpackChunkhc_documentation||[]).push([[8534],{23:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"tutorials/2018-04-30-metadata-tutorial","title":"Configuring metadata on hale\xbbconnect","description":"Metadata creation is often a time-consuming, tedious and error-prone task. The hale\xbbconnect platform can be configured to automatically generate ISO, INSPIRE and GDI-DE compliant metadata for datasets and view and download network services. hale\xbbconnect gathers information from datasets, environment variables such as user profile data, and user-defined custom metadata fields, to auto-generate metadata compliant with numerous metadata standards. The default metadata that hale\xbbconnect generates can be configured by Theme managers and Superusers in the metadata section of a theme. Metadata configuration only needs to be configured once. The theme containing the metadata configuration can be re-used multiple times by any user, for any dataset in an organisation.","source":"@site/docs/tutorials/2018-04-30-metadata-tutorial.md","sourceDirName":"tutorials","slug":"/tutorials/2018-04-30-metadata-tutorial","permalink":"/docs/tutorials/2018-04-30-metadata-tutorial","draft":false,"unlisted":false,"editUrl":"https://github.com/wetransform/hc-documentation/tree/master/docs/tutorials/2018-04-30-metadata-tutorial.md","tags":[],"version":"current","frontMatter":{"title":"Configuring metadata on hale\xbbconnect","categories":["help-page-category-tutorials","help-page-subcategory-tutorials"],"layout":"help-detail","language":"en"},"sidebar":"tutorialSidebar","previous":{"title":"Configuring an online transformation on hale\xbbconnect","permalink":"/docs/tutorials/2018-04-29-transformation-tutorial"},"next":{"title":"Using hale\xbbconnect resources in QGIS","permalink":"/docs/tutorials/2018-05-01-qgis-tutorial"}}');var i=a(4848),s=a(8453);const o={title:"Configuring metadata on hale\xbbconnect",categories:["help-page-category-tutorials","help-page-subcategory-tutorials"],layout:"help-detail",language:"en"},r=void 0,l={},d=[{value:"<strong>Tutorial data</strong>",id:"tutorial-data",level:3},{value:"<strong>Configuring metadata using the Metadata Editor</strong>",id:"configuring-metadata-using-the-metadata-editor",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Metadata creation is often a time-consuming, tedious and error-prone task. The hale\xbbconnect platform can be configured to automatically generate ISO, INSPIRE and GDI-DE compliant metadata for datasets and view and download network services. hale\xbbconnect gathers information from datasets, environment variables such as user profile data, and user-defined custom metadata fields, to auto-generate metadata compliant with numerous metadata standards. The default metadata that hale\xbbconnect generates can be configured by Theme managers and Superusers in the metadata section of a theme. Metadata configuration only needs to be configured once. The theme containing the metadata configuration can be re-used multiple times by any user, for any dataset in an organisation."}),"\n",(0,i.jsx)(t.p,{children:"This tutorial reviews the steps required to configure metadata using hale\xbbconnect's metadata editor tool. The validation tests hale\xbbconnect executes to ensure ISO, INSPIRE and GDI-DE metadata compliancy are also discussed. Before we begin, let's review a list of the hale\xbbconnect resources we need:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Theme manager or Superuser hale\xbbconnect profile"}),"\n",(0,i.jsx)(t.li,{children:"dataset"}),"\n",(0,i.jsx)(t.li,{children:"schema(s) for your dataset"}),"\n",(0,i.jsx)(t.li,{children:"theme"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"IMPORTANT: Default metadata is automatically generated by hale\xbbconnect for datasets, and network services. The configuration of metadata is optional."})}),"\n",(0,i.jsx)(t.h3,{id:"tutorial-data",children:(0,i.jsx)(t.strong,{children:"Tutorial data"})}),"\n",(0,i.jsx)(t.p,{children:"For this tutorial, we will use:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["One shapefile ",(0,i.jsx)(t.em,{children:"Contains OS data \xa9 Crown copyright and database right 2018"}),". You can download the shapefile ",(0,i.jsx)(t.a,{href:"https://wetransform.box.com/s/2mnyp9xtjbbk3b5tbc1thg0jmxthgd0e",children:"here"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"configuring-metadata-using-the-metadata-editor",children:(0,i.jsx)(t.strong,{children:"Configuring metadata using the Metadata Editor"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Step 1: Add custom metadata fields"})}),"\n",(0,i.jsx)(t.p,{children:"hale\xbbconnect provides users with the option to add custom metadata fields to the Organisation section found under Settings, and to a user's profile. Custom metadata fields hold values that can be used to prefill metadata elements. In order to auto-populate metadata, hale\xbbconnect gathers information across the platform, including all of the user-supplied values in the user profile and Organisation sections. In some cases, hale\xbbconnect automatically applies these collected values to metadata fields."}),"\n",(0,i.jsx)(t.p,{children:"When you create a custom metadata field, hale\xbbconnect adds the key, value pair(s) provided to the autofill assistant in the metadata editor. We will take a look at the autofill assistant later. First, let's add a custom metadata field."}),"\n",(0,i.jsx)(t.p,{children:"To create a new custom metadata field in your organisation profile, follow this workflow logged in as a Theme Manager or Superuser:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Click the Settings icon (gear symbol) at the top right of the screen"}),"\n",(0,i.jsx)(t.li,{children:"Click the Organisations section and select your organisation from the list"}),"\n"]}),"\n",(0,i.jsx)("img",{src:a(3906).A,alt:"",title:"Organisation profile page",className:"img-responsive img-inline-help"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Scroll to the bottom of the organisation profile page and click \xab+Add field\xbb to add your custom key, value pair","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The key, value pair that you enter will be available to you in the autofill assistant during metadata configuration."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("img",{src:a(5032).A,alt:"",title:"Creating a custom metadata field",className:"img-responsive img-inline-help"}),"\n",(0,i.jsx)(t.p,{children:"To add a custom field to your user profile, follow this workflow logged in as a Data Manager, Theme Manager or Superuser:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Click the User profile icon (person) at the top right of the screen"}),"\n",(0,i.jsxs)(t.li,{children:["Scroll to the bottom of the user profile page and click \xab+Add field\xbb to add your custom key, value pair","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The key, value pair that you enter will be available to you in the autofill assistant during metadata configuration."}),"\n",(0,i.jsx)(t.li,{children:"All organisation users can add custom metadata fields to their user profiles. Theme Managers and Superusers configuring metadata should come to an agreement with Data Managers on the custom metadata fields that will be implemented. Themes configured to use custom metadata fields in user profiles will access the value from the user profile of the person creating the dataset."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"IMPORTANT: Custom metadata fields are optional."})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Step 2: Create a schema and a theme for your data"})}),"\n",(0,i.jsx)(t.p,{children:"The next step in the metadata configuration workflow is to create a schema and a theme for your dataset. Your dataset is the data that you want to create metadata for. hale\xbbconnect provides several options for creating a schema. You can visit the following documentation pages to learn more about schema creation:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/setup-hc/create-a-schema/2018-01-28-schema-preset",children:"Create a schema based on a schema preset"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/setup-hc/create-a-schema/2018-01-28-schema-create-file",children:"Create a schema by uploading a schema file"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/setup-hc/create-a-schema/2018-01-28-schema-create-external",children:"Create a schema using a web address"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/setup-hc/create-a-schema/2018-01-28-schema-create-existing",children:"Create a new schema based on an existing schema"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"In this tutorial, we will work with the option to create a schema by uploading a schema file. Your source data is in shapefile format, and the option to create a schema by uploading a schema file enables us to simply upload a shapefile. hale\xbbconnect automatically reads the shapefile and generates a schema for you."}),"\n",(0,i.jsx)(t.p,{children:"To create a new schema based on a shapefile, follow this workflow logged in as a Theme Manager or Superuser:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Go to \u201cSchemas\u201d on the main toolbar"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Go to \u201cCreate new schema\u201d at the bottom of the schema list"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Select creation method. In the first step, select \xabUpload schema file\xbb. Click \xabContinue\xbb"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Next, define the schema you want to use. The schema definition is determined by the creation method you selected in the previous step."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click the \xabSelect file(s)\xbb button and navigate to the shapefile located in the tutorial data folder. Add the shapefile named WatercourseLink. You can also upload the zipped folder which contains the shapefile. When you are finished, click \xabContinue\xbb",(0,i.jsx)("img",{src:a(5028).A,alt:"",title:"Creating a new schema",className:"img-responsive img-inline-help"})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Add information. Provide the name, author, type and version of your schema. When you are finished, click \xabContinue\xbb"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Confirm creation. In the final step, review your schema. You have the option to add or create a theme for your schema. Toggle the switch to enable the creation of a theme. When you are finished, click \xabCreate\xbb to save the schema and create an associated theme."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Step 3: Configure metadata in your theme"})}),"\n",(0,i.jsx)(t.p,{children:"A theme is a re-usable configuration object used to define common settings for dataset metadata, service publishing and transformation. A theme has several elements:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"A schema, defined through association with a number of feature types"}),"\n",(0,i.jsx)(t.li,{children:"Display properties for the fields and types of that schema, such as aliases and styling"}),"\n",(0,i.jsx)(t.li,{children:"A metadata configuration which defines the metadata fields that need to be provided, as well as default values and autofill rules for a high degree of automation"}),"\n",(0,i.jsx)(t.li,{children:"An association with a transformation project that enables format conversion and schema transformation"}),"\n",(0,i.jsx)(t.li,{children:"A configuration for an automated workflow that can be set to execute service publishing and data transformation on certain events such as an update to a dataset"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The metadata editor tool is located in the Metadata section of your theme. In this step, we will use the metadata editor to create a re-useable metadata configuration which utilizes custom fields, autofill rules and enumerations. The metadata configuration is applied to all datasets that use your theme. If you have metadata that you want to re-use, visit the ",(0,i.jsx)(t.a,{href:"/docs/setup-hc/edit-metadata-config/2015-02-10-theme-edit-metadata",children:"Edit metadata configuration"})," section of our help for more information."]}),"\n",(0,i.jsx)(t.p,{children:"First, navigate to the theme you created during schema creation in Step 2."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Go to \u201cThemes\u201d on the main toolbar"}),"\n",(0,i.jsx)(t.li,{children:"Enter the name of your theme in the search bar. When you create a theme during schema creation, your theme is automatically given the same name as your schema. You can also use the dropdown menu next to \u201cSort order\u201d. Select \u201cLast modified\u201d to view your most recent themes."}),"\n",(0,i.jsx)(t.li,{children:"Select your theme from the list of resources"}),"\n",(0,i.jsxs)(t.li,{children:["Click the section named Metadata ",(0,i.jsx)("img",{src:a(8156).A,alt:"",title:"Metadata",className:"img-responsive img-inline-help"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The Metadata section contains configuration settings and an editable JSON text editor that enables Theme managers and Superusers to customize the default metadata template. The default metadata template is a list of category objects which are used to create valid ISO, INSPIRE and GDI-DE metadata files. Each category object and the list of fields contained within it, provides the information required to populate metadata properties in the supported metadata profiles. The metadata template is used internally to map user-provided metadata values to the metadata profiles. The comment field in each category object identifies the relevant metadata profile. For example: ",(0,i.jsx)(t.code,{children:'"comment": "ISO 3.2.1 #360"'})," indicates that the object fulfils the requirement of the ISO 19115 Geographic information \u2013 Metadata profile, ",(0,i.jsx)(t.a,{href:"https://www.geoportal.de/SharedDocs/Downloads/DE/GDI-DE/Deutsche_Uebersetzung_der_ISO-Felder.html",children:"section B.3.2.1 item #360"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Let's take a look at the list of fields in a category object, because that is what you have to configure."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "name": "md-dataset.citation.title",\n  "required": true,\n  "minOccurs": 1,\n  "maxOccurs": 1,\n  "comment": "ISO 3.2.1 #360",\n  "label": "Title",\n  "description": "name by which the cited resource is known",\n  "type": "string",\n  "schema": null,\n  "defaultValue": null,\n  "autofillRule": "{{dataset.name}}",\n  "visibility": true,\n  "editable": true,\n  "targets": {\n    "bsp": "md-dataset.citation.title"\n  }\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["It is important to understand that the internal mapping is based on the ",(0,i.jsx)(t.code,{children:"name"})," field of each category object. Values entered in the ",(0,i.jsx)(t.code,{children:"name"})," field are limited to the following values:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"md-dataset.citation.title"}),"\n",(0,i.jsxs)(t.li,{children:["md-dataset.identification.*","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.abstract"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.keyword_inspire"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.keyword_simple"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.topicCategory"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.geographicExtent.eastBoundLongitude"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.geographicExtent.northBoundLatitude"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.geographicExtent.southBoundLatitude"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.geographicExtent.westBoundLongitude"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.topicCategory"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.constraints.useLimitations"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.constraints.useConstraints"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.constraints.accessContraints"}),"\n",(0,i.jsxs)(t.li,{children:["md-dataset.identification.contactForResource.*","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.individualName"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.authorityUrl"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.organisationName"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.positionName"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.roleCode"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.email"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.deliveryPoint"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.postalCode"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.city"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.administrativeArea"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.country"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.voicePhone"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.identification.contactForResource.facsimile"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["md-dataset.contactForMetadata.*","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.individualName"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.authorityUrl"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.organisationName"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.positionName"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.roleCode"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.email"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.deliveryPoint"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.postalCode"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.city"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.administrativeArea"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.country"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.voicePhone"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.contactForMetadata.facsimile"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.fileidentifier"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.mdIdentifierLocalId"}),"\n",(0,i.jsx)(t.li,{children:"md-dataset.mdIdentifierNamespace"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"required"}),", ",(0,i.jsx)(t.code,{children:"minOccurs"})," and ",(0,i.jsx)(t.code,{children:"maxOccurs"})," fields express the cardinality of the metadata value, and should not be altered. Each additional field describes how the input should look and behave in the user interface, what kind of content is allowed, and whether default values or derived values should be inserted."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"label:"})," The label that should be displayed to the user next to the input field."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"description:"})," A longer, explanatory text for the fields that is displayed on hovering over the label."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"type:"})," The primitive type of data this field expects. One of string, object, array, integer and float."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"schema:"})," The schema or format of the value to be inserted. One of email, enum, geojson, json, wkt and csv."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"defaultValue:"})," A fixed default value that will be assigned to the field if it does not contain a value yet. Please note that when transforming data, the metadata values of the source dataset are copied to the target dataset and in that case, a configured default value will not overwrite it.  In on-premise deployments, the behaviour for the target dataset can be changed by setting the feature toggle ",(0,i.jsx)(t.code,{children:"TRANSFORMATION_AUTOFILL_REPLACE_DEFAULTS"})," to ",(0,i.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"autofillRule:"})," A dynamic default value that will be assigned to the field. This value is calculated from the current environment variables such as the user, the organisation context, the data set and the theme. When you click into a row with an ",(0,i.jsx)(t.code,{children:"autofillRule"})," property key, an assistant for choosing a value appears in the upper right corner of the editor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"editable:"})," Set to ",(0,i.jsx)(t.code,{children:"true"})," when the data manager should be able to edit the value in this field."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"targets:"})," This is a list with mapping rules to external services, such as metadata catalogues. By default, there should always be at least a ",(0,i.jsx)(t.code,{children:"bsp"})," target defined. ",(0,i.jsx)(t.code,{children:"bsp"})," is what hale\xbbconnect needs in order to publish services."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"In this tutorial we will focus on the following fields, each of which can be configured by the user to support the automatic creation of metadata in hale\xbbconnect:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"type"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"defaultValue"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"autofillRule"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"visibility"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"editable"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"enumValues"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The first category object in the metadata editor provides the name of the dataset: ",(0,i.jsx)(t.code,{children:'"name": "md-dataset.citation.title"'}),". In the first example, we will set the ",(0,i.jsx)(t.code,{children:"editable"})," property to ",(0,i.jsx)(t.code,{children:"false"}),". Place your cursor next to the ",(0,i.jsx)(t.code,{children:"editable"}),' property and type "false". This option prevents other users in your organisation from editing the auto fill value.']}),"\n",(0,i.jsxs)(t.p,{children:["The second category object provides a brief summary of the dataset: ",(0,i.jsx)(t.code,{children:'"name": "md-dataset.identification.abstract"'}),". In this example, we will set the ",(0,i.jsx)(t.code,{children:"visibility"})," property to ",(0,i.jsx)(t.code,{children:"false"}),". Place your cursor next to the ",(0,i.jsx)(t.code,{children:"visibility"}),' property and type "false". This option controls the number of fields users must view during dataset creation.',(0,i.jsx)("img",{src:a(9573).A,alt:"",title:"Editing configuration fields ",className:"img-responsive img-inline-help"})]}),"\n",(0,i.jsxs)(t.p,{children:["The third category object provides an enumeration example: ",(0,i.jsx)(t.code,{children:'"name": "md-dataset.identification.keyword_inspire"'}),". Enumeration fields enable you to create dropdown menus in the metadata entry user interface. The label, value pairs define the labels shown in the user interface and the mapping values used internally. You can edit the labels in an enumeration to display labels in a different language in the user interface. You cannot edit the associated values because they are used in an internal mapping.",(0,i.jsx)("img",{src:a(8940).A,alt:"",title:"Creating an enumeration",className:"img-responsive img-inline-help"})]}),"\n",(0,i.jsxs)(t.p,{children:["The fourth category object provides simple keywords: ",(0,i.jsx)(t.code,{children:'"name": "md-dataset.identification.keyword_simple"'}),". In this example, we will set the ",(0,i.jsx)(t.code,{children:"defaultValue"})," to 'INSPIRE' so that the field is always populated with this value. Place your cursor next to the ",(0,i.jsx)(t.code,{children:"defaultValue"}),' property and type "INSPIRE". The field remains editable, so users can change the value if necessary.']}),"\n",(0,i.jsxs)(t.p,{children:["In the last example, we will use custom metadata fields to create autofill rules. In this example, we will work with the category object: ",(0,i.jsx)(t.code,{children:'"name": "md-dataset.contactForMetadata.positionName"'}),". Place your cursor next to ",(0,i.jsx)(t.code,{children:"autofillRule:"}),". The autofill assistant will appear in the upper right corner of the editor. Click on Organisation in the autofill assistant, and scroll to Custom fields. Click Custom fields in the assistant, and click on the key value you set in step 1 of this tutorial. The metadata will now auto-populate with the value you entered in your newly created custom field.",(0,i.jsx)("img",{src:a(1365).A,alt:"",title:"Autofill assistant",className:"img-responsive img-inline-help"})]}),"\n",(0,i.jsx)(t.p,{children:"Once you have configured the template in the editor, click the \xabSave\xbb button at the bottom of the page."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Step 4: Publish and validate your dataset and metadata"})}),"\n",(0,i.jsx)(t.p,{children:"In the final step, we will create a dataset and view the metadata that we configured in this tutorial. Using our configured theme, we can upload data and create metadata in a few simple steps."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Go to \xabData\xbb on the main toolbar"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Go to \xabCreate new Data Set\xbb at the bottom of the dataset list"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Select your theme to link to your dataset."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click \xabSelect file(s)\xbb and navigate to the tutorial data named ",(0,i.jsx)(t.a,{href:"https://wetransform.box.com/s/2mnyp9xtjbbk3b5tbc1thg0jmxthgd0e",children:"Metadata_TutorialData.zip"}),". If you are working with shapefiles, we recommend that you upload them in a .zip file."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Give your dataset a name. This name should enable you to quickly und clearly identify the dataset in the system."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Provide metadata for your dataset. In this step, we will see the results of our metadata configuration. There is a list of several, expandable panels which contain both optional and required metadata elements."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:['Expand the first panel, "Data Set - General" to check:',"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The Title field is not editable"}),"\n",(0,i.jsx)(t.li,{children:"The Abstract Dataset field is not visible"}),"\n",(0,i.jsx)(t.li,{children:"Put your cursor in the INSPIRE Theme dropdown menu to view the enumeration values"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:['Expand the "Data set - Contact for Metadata" panel to check:',"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The Position field is populated with your custom metadata field value"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"In the final step, you can review the steps of the publishing process configured for the theme. You will see two toggle switches to publish download and view services for your dataset. Activate the toggle switches and click \xabCreate\xbb"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"hale\xbbconnect will immediately begin to test and validate your metadata."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Click the section named View Services"}),"\n",(0,i.jsxs)(t.li,{children:["The test reports panel provides a list of PDFs which contain the results of a series of tests executed on published metadata and services. Tests check for ISO, GDI-DE and INSPIRE compliancy. For more information, visit our ",(0,i.jsx)(t.a,{href:"/docs/references/data/2018-03-08-reference-data-view-services",children:"View Services"})," help section."]}),"\n",(0,i.jsx)(t.li,{children:"Click on any of the listed test reports to view the results"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Metadata configuration helps users to create metadata quickly and efficiently, greatly reducing the potential for error. The hale\xbbconnect platform gathers information from across the platform to automate the metadata generation process and produce valid and compliant dataset and network service metadata. In this tutorial we configured metadata in a theme which can be reused by multiple users, with any role, as often as necessary, greatly reducing the burden of metadata requirements."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1365:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_autofillAssistant-e217b54c4b6318c5241819d33a933ef1.png"},3906:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_organisations-7fe44cf2b90db5fcce26a4efa45a4d7c.png"},5028:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_Upload_schema-d7b369fd9cbc655e99bd57ce5196b0af.png"},5032:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_custom_fields-da78d42095dac5b1b617316f30c39173.png"},8156:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_metadata-45cf9434cf13e34eee2505184d433d77.png"},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>r});var n=a(6540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},8940:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_enum-75b9c775c426ab7f48fa97ba2482f37b.png"},9573:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Tutorial_editconfig-0ff20b3080b9b92e055702cf4fd2c407.png"}}]);