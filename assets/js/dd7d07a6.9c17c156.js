"use strict";(self.webpackChunkhc_documentation=self.webpackChunkhc_documentation||[]).push([[7948],{5493:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"setup-hc/create-a-theme/2015-02-01-theme-edit-view-config","title":"Edit display properties","description":"A common issue with type and property names from data schemas is that they are hard to understand. They tend to be cryptic abbreviations, especially when they come from a Shapefile, or are defined using a foreign language. To provide effective view services despite this, you can define display properties which are then used for legends and GetFeatureInfo popups. hale\xbbconnect supports the configuration of aliases for feature type names and feature properties.","source":"@site/docs/setup-hc/create-a-theme/2015-02-01-theme-edit-view-config.md","sourceDirName":"setup-hc/create-a-theme","slug":"/setup-hc/create-a-theme/2015-02-01-theme-edit-view-config","permalink":"/docs/setup-hc/create-a-theme/2015-02-01-theme-edit-view-config","draft":false,"unlisted":false,"editUrl":"https://github.com/wetransform/hc-documentation/tree/master/docs/setup-hc/create-a-theme/2015-02-01-theme-edit-view-config.md","tags":[],"version":"current","frontMatter":{"title":"Edit display properties","categories":["help-page-category-setup-haleconnect","help-page-subcategory-setup-haleconnect-themecreate"],"layout":"help-detail","language":"en"},"sidebar":"tutorialSidebar","previous":{"title":"Create Transformation Project","permalink":"/docs/setup-hc/create-a-transformation-project/2018-01-30-transformation_project_create"},"next":{"title":"Add Feature Types","permalink":"/docs/setup-hc/create-a-theme/2015-02-05-theme-add-feature-types"}}');var s=n(4848),i=n(8453);const r={title:"Edit display properties",categories:["help-page-category-setup-haleconnect","help-page-subcategory-setup-haleconnect-themecreate"],layout:"help-detail",language:"en"},o="Formatting display values",c={},l=[];function d(e){const t={h1:"h1",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"A common issue with type and property names from data schemas is that they are hard to understand. They tend to be cryptic abbreviations, especially when they come from a Shapefile, or are defined using a foreign language. To provide effective view services despite this, you can define display properties which are then used for legends and GetFeatureInfo popups. hale\xbbconnect supports the configuration of aliases for feature type names and feature properties."}),"\n",(0,s.jsx)(t.p,{children:"To set display properties, follow these steps as a logged in theme manager or organisation superuser:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Go to \xabThemes\xbb"}),"\n",(0,s.jsx)(t.li,{children:"Pick the theme you'd like to change the configuration for"}),"\n",(0,s.jsx)(t.li,{children:"Go to \xabFeature Types\xbb"}),"\n",(0,s.jsx)(t.li,{children:"Click on the properties of the feature type for which you'd like to edit the display properties"}),"\n",(0,s.jsxs)(t.li,{children:["In the table that appears, first decide which fields you want to be visible in a popup by setting the \xabDisplay\xbb property to \xabYes\xbb, and then pick an \xabAlias\xbb for those that should be visible.",(0,s.jsx)("img",{src:n(7350).A,alt:"",title:"Editing feature type properties",className:"img-responsive img-inline-help"})]}),"\n",(0,s.jsx)(t.li,{children:"Save your configuration by clicking on the \xabSave\xbb button at the end of the table."}),"\n"]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"formatting-display-values",children:"Formatting display values"})}),"\n",(0,s.jsx)(t.p,{children:"The renderer enables users to control the formatting of values displayed in the Feature Explorer. Users have the option to select one of the following renderers:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Default (no renderer)"}),"\n",(0,s.jsx)(t.li,{children:"Formatted number (enter a number format, e.g. ###.##)"}),"\n",(0,s.jsx)(t.li,{children:"Formatted date (choose a date format option)"}),"\n",(0,s.jsxs)(t.li,{children:["Codelist labels (substitute coded values can be provided in lookup table)","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"semicolon separated CSV or valid JSON values can be provided"}),"\n",(0,s.jsx)(t.li,{children:"the first column must contain values found in the data and the second column must contain the display values"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Here is an example of how to substitute coded values using labels provided through a lookup table:"}),"\n",(0,s.jsx)("img",{src:n(9193).A,alt:"",title:"Substitute coded values using labels",className:"img-responsive img-inline-help"}),"\n",(0,s.jsx)(t.p,{children:"To edit applied renderers, click on the gear symbol to make your changes."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7350:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/property_editing-7da3c707049f444e4b1669367888f7a4.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var a=n(6540);const s={},i=a.createContext(s);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:t},e.children)}},9193:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/renderer-59b4c18137f60f78c91eeb0418e0cfa8.png"}}]);